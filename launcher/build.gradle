plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

dependencies {
    implementation project(':unityLibrary')
     implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))

     // define any required OkHttp artifacts without version
     implementation("com.squareup.okhttp3:okhttp")
     implementation("com.squareup.okhttp3:logging-interceptor")

     implementation "com.google.android.exoplayer:exoplayer:2.19.1"

     implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"

     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"



     implementation "com.google.code.gson:gson:$gson_version"

     implementation "io.reactivex.rxjava3:rxjava:3.1.7"
     implementation "io.reactivex.rxjava3:rxandroid:3.0.2"

     implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
     implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
     implementation "com.squareup.retrofit2:converter-simplexml:$retrofit2_version"


    implementation "androidx.constraintlayout:constraintlayout:$androidx_contraintlayout_verion"



    }

android {
    ndkPath "E:/unity/2022.3.8f1c1/Editor/Data/PlaybackEngines/AndroidPlayer/NDK"

    compileSdkVersion 33
    buildToolsVersion '33.0.0'

    buildFeatures {
        viewBinding = true
        dataBinding = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 32
        applicationId 'com.DefaultCompany.Myproject'
        ndk {
            abiFilters 'armeabi-v7a'
        }
        versionCode 1
        versionName '0.1'
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', '.bundle', '.unityexp'] + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}
